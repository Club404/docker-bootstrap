version: '2'
services:
  # -----------------------------------------------------------------------------------------
  # Portal web application, hosted by the proxy
  # -----------------------------------------------------------------------------------------
  portal:
    container_name: "portal"
    image: "example.com:5000/portal:latest"
    volumes:
     - ./projects/portal/dist:/tmp/www:rw
     - ./projects/portal/dist:/var/www/vhosts/example.com/:ro
  # -----------------------------------------------------------------------------------------

  # -----------------------------------------------------------------------------------------
  # Public Proxy
  # -----------------------------------------------------------------------------------------
  # You can specify one of the following proxy types:
  # proxy -> extends -> service:
  #  = `http`     - basic http proxy (insecure, self-signed)
  #  = `https`    - secured proxy built on top of `https://letsencrypt.org/`
  #  = `gateway`  - advanced proxy gateway with config and service auto discovery included
  # -----------------------------------------------------------------------------------------
  proxy:
    container_name: "proxy"
    extends:
      service: gateway # Specify `http`, `https` or `gateway`
    ports:
      - "8080:80"
      - "8443:443"
    env_file:
      - ./.env
    volumes_from:
      - portal
    depends_on:
     - consul
     - registrator
     #- portainer
     - registry
     - test-py
  # -----------------------------------------------------------------------------------------
  # Proxy type: `http` (insecure)
  # -----------------------------------------------------------------------------------------
  http:
    image: "example.com:5000/proxy/http:latest"
  # -----------------------------------------------------------------------------------------
  # Proxy type: `https` (secured with lets-encrypt)
  # -----------------------------------------------------------------------------------------
  https:
    image: "example.com:5000/proxy/https:latest"
    environment:
      STAGE: local # or "production"
      DOMAINS: "example.com"
    volumes:
     - ./components/proxy/https/certs:/var/lib/https-portal:rw
  # -----------------------------------------------------------------------------------------
  # Proxy type: `gateway` (auto service discovery with active routing)
  # -----------------------------------------------------------------------------------------
  gateway:
    image: "example.com:5000/proxy/gateway:latest"
    environment:
      CONSUL_URL: "consul:8500"
  registrator:
    container_name: "registrator"
    image: "example.com:5000/registrator:latest"
    command: "-internal consul://consul:8500"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    depends_on:
     - consul
  consul:
    container_name: "consul"
    extends:
      file: ./components/consul/docker-compose.yml
      service: consul
  # -----------------------------------------------------------------------------------------

  # -----------------------------------------------------------------------------------------
  # Build and promotion pipeline
  # -----------------------------------------------------------------------------------------
  registry:
    container_name: "registry"
    extends:
      file: ./components/registry/docker-compose.yml
      service: registry

  # -----------------------------------------------------------------------------------------
  # Docker administration
  # -----------------------------------------------------------------------------------------
  portainer:
    extends:
      file: ./components/portainer/docker-compose.yml
      service: portainer
    depends_on:
      - portainer-api

  portainer-api:
    extends:
      file: ./components/portainer/docker-compose.yml
      service: portainer-api


  # -----------------------------------------------------------------------------------------
  # Testing containers
  # -----------------------------------------------------------------------------------------
  test-py:
    extends:
      file: ./projects/tests-py/docker-compose.yml
      service: tests-python
    depends_on:
     - test-py-redis

  test-py-redis:
    extends:
      file: ./projects/tests-py/docker-compose.yml
      service: tests-python-redis
