include /etc/nginx/conf.d/upstreams/*.conf;

server {
  listen 80;
  server_name  example.com;

  include /etc/nginx/conf.d/locations/*.conf;

  # ----------------------------------------------------
  # Auto generated proxy locations
  # ----------------------------------------------------
  {{ range $service := services }}
      {{ range $tag := $service.Tags }}
          {{ if $tag | regexMatch "(app|api)(:.*)?" }}
              {{ $tag_name := $tag | regexReplaceAll "(app|api)(:)(.*)" "$1" }}
              {{ $tag_opts := $tag | regexReplaceAll "(app|api)(:)(.*)" "$3" }}
              {{ $tag_port := $tag_opts }}
              {{ $app_port := $service.Name | regexReplaceAll "([\\w|\\-]+)(\\-)(\\d+)" "$3" }}
              {{ $app_name := $service.Name | regexReplaceAll "([\\w|\\-]+)(\\-)(\\d+)" "$1" }}
  # ===========================================================
  # ~~> [!] {{ $service.Name }} {{ $service.Tags }} <~~~~ {{ $tag }}
  # ~~> [?] {{ $app_name }} [ {{ $app_port }} ] ==? [ {{ $tag_port }} ]
  # ===========================================================
              {{ if or (eq $tag $tag_name) (and (eq $tag_port $app_port) (ne $app_name $service.Name)) }}
                  {{ if eq $tag_name "app" }}
    location /{{ $app_name }}/ {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://{{ $service.Name }}/;
      proxy_next_upstream error timeout invalid_header http_500;
    }
                  {{ else if eq $tag_name "api" }}
    location /api/{{ $app_name }}/ {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://{{ $service.Name }}/;
      proxy_next_upstream error timeout invalid_header http_500;
    }
                  {{ end }}
              {{ end }}
          {{ end }}
      {{ end }}
  {{ end }}

}

server {
  listen 443 ssl http2;
  server_name  example.com;

  ssl_certificate     /etc/nginx/certs/server.crt;
  ssl_certificate_key /etc/nginx/certs/server.key;
  ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers         HIGH:!aNULL:!MD5;

  include /etc/nginx/conf.d/locations/*.conf;

  # ----------------------------------------------------
  # Auto generated proxy locations
  # ----------------------------------------------------
  {{ range $service := services }}
      {{ range $tag := $service.Tags }}
          {{ if $tag | regexMatch "(app|api)(:.*)?" }}
              {{ $tag_name := $tag | regexReplaceAll "(app|api)(:)(.*)" "$1" }}
              {{ $tag_opts := $tag | regexReplaceAll "(app|api)(:)(.*)" "$3" }}
              {{ $tag_port := $tag_opts | regexReplaceAll "(\\d+)(\\/)(.*)" "$1" }}
              {{ $tag_path := $tag_opts | regexReplaceAll "(\\d+)(\\/)(.*)" "$3" }}
              {{ $app_port := $service.Name | regexReplaceAll "([\\w|\\-]+)(\\-)(\\d+)" "$3" }}
              {{ $app_name := $service.Name | regexReplaceAll "([\\w|\\-]+)(\\-)(\\d+)" "$1" }}
  # ===========================================================
  # ~~> [!] {{ $service.Name }} {{ $service.Tags }} <~~~~ {{ $tag }}
  # ~~> [?] {{ $app_name }} [ {{ $app_port }} ] ==? [ {{ $tag_port }} ] {{ $tag_path }}
  # ===========================================================
              {{ if or (eq $tag $tag_name) (and (eq $tag_port $app_port) (ne $app_name $service.Name)) }}
                  {{ if eq $tag_name "app" }}
    location /{{ $app_name }}/ {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://{{ $service.Name }}/;
      proxy_next_upstream error timeout invalid_header http_500;
    }
                  {{ else if eq $tag_name "api" }}
    location /api/{{ $app_name }}/ {
      proxy_http_version 1.1;
      proxy_set_header Connection "";
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://{{ $service.Name }}/;
      proxy_next_upstream error timeout invalid_header http_500;
    }
                  {{ end }}
              {{ end }}
          {{ end }}
      {{ end }}
  {{ end }}

}

# ----------------------------------------------------
# Auto generated upstream proxy definitions
# ----------------------------------------------------
{{ range $service := services }}{{ if ne .Name "consul" }}
upstream {{ $service.Name }} {
  # ~~> {{ $service.Name }}
  {{range service $service.Name}}server {{.Address}}:{{.Port}} max_fails=3 fail_timeout=60 weight=1;
  {{else}}server 127.0.0.1:65535; # Force a 502 (server error)
  {{end}}# <~~ {{ $service.Name }}
}
{{ end }}{{ end }}
# ----------------------------------------------------